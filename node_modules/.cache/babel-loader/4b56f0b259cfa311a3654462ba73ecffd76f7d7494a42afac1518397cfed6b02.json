{"ast":null,"code":"// First, always increment search count to ensure proper remounting\nsetSearchCount(prevCount => prevCount + 1);\n\n// Then set loading state after a brief delay to ensure DOM updates\nsetTimeout(() => {\n  setLoading(true);\n  setError(null);\n\n  // Simulate API call with slightly longer delay\n  setTimeout(() => {\n    const descriptions = ['Sunny', 'Cloudy', 'Rainy', 'Partly Cloudy'];\n    const description = descriptions[Math.floor(Math.random() * 4)];\n\n    // Create the new weather data but don't set it to state yet\n    const data = {\n      city: city,\n      temperature: Math.floor(Math.random() * 30) + 5,\n      description: description,\n      humidity: Math.floor(Math.random() * 50) + 30,\n      windSpeed: Math.floor(Math.random() * 20) + 1\n    };\n    if (loadingRef.current) {\n      // Add fade-out class\n      loadingRef.current.classList.add('fade-out');\n\n      // Listen for animation completion\n      const handleAnimationEnd = () => {\n        // Remove the event listener to avoid memory leaks\n        if (loadingRef.current) {\n          loadingRef.current.removeEventListener('animationend', handleAnimationEnd);\n        }\n\n        // First end the loading state\n        setLoading(false);\n\n        // Then set the new weather data to trigger the background change\n        setNewWeatherData(data);\n      };\n\n      // Add the event listener\n      loadingRef.current.addEventListener('animationend', handleAnimationEnd);\n    } else {\n      // Fallback in case ref isn't available\n      setLoading(false);\n      setNewWeatherData(data);\n    }\n  }, 1500);\n}, 10); // Small delay ensures React has completed previous state updates","map":{"version":3,"names":["setSearchCount","prevCount","setTimeout","setLoading","setError","descriptions","description","Math","floor","random","data","city","temperature","humidity","windSpeed","loadingRef","current","classList","add","handleAnimationEnd","removeEventListener","setNewWeatherData","addEventListener"],"sources":["/Users/andrew/Documents/Projects/Local/Reactjs weather app/weather-app/src/MainContent.js"],"sourcesContent":["// First, always increment search count to ensure proper remounting\nsetSearchCount(prevCount => prevCount + 1);\n\n// Then set loading state after a brief delay to ensure DOM updates\nsetTimeout(() => {\n  setLoading(true);\n  setError(null);\n  \n  // Simulate API call with slightly longer delay\n  setTimeout(() => {\n    const descriptions = ['Sunny', 'Cloudy', 'Rainy', 'Partly Cloudy'];\n    const description = descriptions[Math.floor(Math.random() * 4)];\n    \n    // Create the new weather data but don't set it to state yet\n    const data = {\n      city: city,\n      temperature: Math.floor(Math.random() * 30) + 5,\n      description: description,\n      humidity: Math.floor(Math.random() * 50) + 30,\n      windSpeed: Math.floor(Math.random() * 20) + 1,\n    };\n    \n    if (loadingRef.current) {\n      // Add fade-out class\n      loadingRef.current.classList.add('fade-out');\n      \n      // Listen for animation completion\n      const handleAnimationEnd = () => {\n        // Remove the event listener to avoid memory leaks\n        if (loadingRef.current) {\n          loadingRef.current.removeEventListener('animationend', handleAnimationEnd);\n        }\n        \n        // First end the loading state\n        setLoading(false);\n        \n        // Then set the new weather data to trigger the background change\n        setNewWeatherData(data);\n      };\n      \n      // Add the event listener\n      loadingRef.current.addEventListener('animationend', handleAnimationEnd);\n    } else {\n      // Fallback in case ref isn't available\n      setLoading(false);\n      setNewWeatherData(data);\n    }\n  }, 1500);\n}, 10); // Small delay ensures React has completed previous state updates"],"mappings":"AAAA;AACAA,cAAc,CAACC,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;;AAE1C;AACAC,UAAU,CAAC,MAAM;EACfC,UAAU,CAAC,IAAI,CAAC;EAChBC,QAAQ,CAAC,IAAI,CAAC;;EAEd;EACAF,UAAU,CAAC,MAAM;IACf,MAAMG,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,eAAe,CAAC;IAClE,MAAMC,WAAW,GAAGD,YAAY,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE/D;IACA,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAEA,IAAI;MACVC,WAAW,EAAEL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;MAC/CH,WAAW,EAAEA,WAAW;MACxBO,QAAQ,EAAEN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;MAC7CK,SAAS,EAAEP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;IAC9C,CAAC;IAED,IAAIM,UAAU,CAACC,OAAO,EAAE;MACtB;MACAD,UAAU,CAACC,OAAO,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;;MAE5C;MACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;QAC/B;QACA,IAAIJ,UAAU,CAACC,OAAO,EAAE;UACtBD,UAAU,CAACC,OAAO,CAACI,mBAAmB,CAAC,cAAc,EAAED,kBAAkB,CAAC;QAC5E;;QAEA;QACAhB,UAAU,CAAC,KAAK,CAAC;;QAEjB;QACAkB,iBAAiB,CAACX,IAAI,CAAC;MACzB,CAAC;;MAED;MACAK,UAAU,CAACC,OAAO,CAACM,gBAAgB,CAAC,cAAc,EAAEH,kBAAkB,CAAC;IACzE,CAAC,MAAM;MACL;MACAhB,UAAU,CAAC,KAAK,CAAC;MACjBkB,iBAAiB,CAACX,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,IAAI,CAAC;AACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}